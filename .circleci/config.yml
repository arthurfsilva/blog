# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/orb-intro/
orbs:
  ruby: circleci/ruby@2.0.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build:
    docker:
      - image: cimg/ruby:3.2.2
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_USER: circleci-demo-ruby
          POSTGRES_DB: blog_test
          POSTGRES_PASSWORD: ""
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      PGHOST: 127.0.0.1
      PGUSER: circleci-demo-ruby
      DB_USERNAME: circleci-demo-ruby
      DB_PASSWORD: ""
      PGPASSWORD: ""
      RAILS_ENV: test
      
    executor: ruby/default
    steps:
      - checkout
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Which bundler?
          command: bundle -v
      - run:
          name: Install Dependencies
          command: bundle install
      - run:
          name: Setup Database
          command: |
            bundle exec rails db:create
            bundle exec rails db:schema:load
      - run:
          name: Rubocop
          command: bundle exec rubocop
      - run:
          name: Reek
          command: bundle exec reek
      - run:
          name: Rspec
          command: bundle exec rspec
      - ruby/install-deps

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build
